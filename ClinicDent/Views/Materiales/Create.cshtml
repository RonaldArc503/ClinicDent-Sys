@model ClinicDent.Models.Materiales

@{
    ViewBag.Title = "Crear Material";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />

<style>
    .edit-container {
        max-width: 1000px;
        margin: 2rem auto;
        padding: 0;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    }

    .section-container {
        padding: 2rem;
        margin-bottom: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        border-left: 4px solid #17a2b8;
        background-color: #fff;
    }

    .edit-title {
        color: #2c3e50;
        margin-bottom: 1.5rem;
        font-size: 1.8rem;
        font-weight: 700;
        display: flex;
        align-items: center;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e9ecef;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .control-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        font-size: 0.95rem;
    }

    .label-icon {
        margin-right: 0.75rem;
        color: #6c757d;
        width: 20px;
        text-align: center;
    }

    .form-control, .select2-selection {
        border-radius: 8px;
        padding: 0.75rem 1rem;
        border: 1px solid #e0e0e0;
        transition: all 0.3s ease;
        font-size: 0.95rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    }

        .form-control:focus, .select2-selection:focus {
            border-color: #17a2b8;
            box-shadow: 0 4px 8px rgba(23, 162, 184, 0.2);
        }

    textarea.form-control {
        min-height: 100px;
        resize: vertical;
    }

    .btn-submit {
        background-color: #17a2b8;
        color: white;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin-top: 1.5rem;
        width: 100%;
        max-width: 220px;
    }

        .btn-submit:hover {
            background-color: #138496;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    .btn-back {
        display: inline-flex;
        align-items: center;
        color: #6c757d;
        text-decoration: none;
        transition: all 0.3s;
        font-size: 0.95rem;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        background-color: #f8f9fa;
    }

        .btn-back:hover {
            color: #17a2b8;
            background-color: #f1f1f1;
            text-decoration: none;
        }

    .datetime-container {
        position: relative;
    }

    .form-columns {
        display: flex;
        gap: 2rem;
    }

    .form-left-column, .form-right-column {
        flex: 1;
    }

    @@media (max-width: 992px) {
        .form-columns {
            flex-direction: column;
            gap: 1rem;
        }

        .edit-container {
            margin: 1rem;
        }
    }

    .select2-container--bootstrap-5 .select2-selection {
        height: auto;
        min-height: 42px;
        display: flex;
        align-items: center;
    }
</style>

<div class="edit-container">
    <div class="section-container">
        <h2 class="edit-title">
            <i class="fas fa-boxes" style="margin-right: 12px; color: #17a2b8;"></i> Crear Material
        </h2>

        @using (Html.BeginForm("Create", "Materiales", FormMethod.Post, new { id = "materialesForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-columns">
                <div class="form-left-column">
                    <div class="form-group">
                        <label class="control-label">
                            <i class="fas fa-tag label-icon"></i> Nombre
                        </label>
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese el nombre del material", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="control-label">
                            <i class="fas fa-calculator label-icon"></i> Cantidad
                        </label>
                        @Html.EditorFor(model => model.cantidad, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @placeholder = "Ingrese la cantidad", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.cantidad, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="control-label">
                            <i class="fas fa-truck label-icon"></i> Proveedor
                        </label>
                        @Html.EditorFor(model => model.proveedor, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese el nombre del proveedor" } })
                        @Html.ValidationMessageFor(model => model.proveedor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-right-column">
                    <div class="form-group">
                        <label class="control-label">
                            <i class="fas fa-calendar-alt label-icon"></i> Fecha de Caducidad
                        </label>
                        <div class="datetime-container">
                            <input type="text" id="fechaCaducidad" class="form-control" placeholder="Seleccione fecha" required />
                            @Html.HiddenFor(model => model.fecha_caducidad, new { @id = "fechaCaducidadHidden" })
                        </div>
                        @Html.ValidationMessageFor(model => model.fecha_caducidad, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="control-label">
                            <i class="fas fa-exclamation-triangle label-icon"></i> Mínimo Stock
                        </label>
                        @Html.EditorFor(model => model.minimo_stock, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @placeholder = "Ingrese el stock mínimo", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.minimo_stock, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="control-label">
                            <i class="fas fa-info-circle label-icon"></i> Descripción
                        </label>
                        @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control", @placeholder = "Ingrese una descripción del material...", @rows = "4" })
                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">
                    <i class="fas fa-toggle-on label-icon"></i> Estado
                </label>
                @Html.DropDownListFor(model => model.estado, new SelectList(new[] {
                    new { Value = "1", Text = "Activo" },
                    new { Value = "0", Text = "Inactivo" }
                }, "Value", "Text", Model?.estado), "-- Seleccione estado --", new
    {
                    @class = "form-control select2",
                    @id = "estado",
                    @required = "required"
                })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>

            <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 2rem;">
                <a href="@Url.Action("Index")" class="btn-back">
                    <i class="fas fa-arrow-left" style="margin-right: 8px;"></i> Volver al listado
                </a>
                <button type="submit" class="btn-submit" id="guardarMaterial">
                    <i class="fas fa-save" style="margin-right: 8px;"></i> Crear Material
                </button>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/es.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            // Inicializar Select2
            $('#estado').select2({ theme: 'bootstrap-5' });

            // Configuración de Flatpickr para la fecha de caducidad
            const fechaCaducidadPicker = flatpickr("#fechaCaducidad", {
                locale: "es",
                dateFormat: "d/m/Y",
                minDate: "today",
                onChange: function (selectedDates, dateStr, instance) {
                    const formattedDate = selectedDates[0] ? instance.formatDate(selectedDates[0], 'Y-m-d') : '';
                    $('#fechaCaducidadHidden').val(formattedDate);
                    console.log('Fecha seleccionada:', formattedDate);
                }
            });

            // Validación en tiempo real
            $('#nombre').on('input', function () {
                if (!this.value.trim()) {
                    this.classList.add('is-invalid');
                    this.nextElementSibling.textContent = 'El nombre es obligatorio.';
                } else {
                    this.classList.remove('is-invalid');
                    this.nextElementSibling.textContent = '';
                }
            });

            $('#cantidad, #minimo_stock').on('input', function () {
                const value = parseInt(this.value);
                const fieldName = this.id === 'cantidad' ? 'Cantidad' : 'Mínimo Stock';
                if (value < (this.id === 'cantidad' ? 1 : 0) || isNaN(value)) {
                    this.classList.add('is-invalid');
                    this.nextElementSibling.textContent = `${fieldName} debe ser ${this.id === 'cantidad' ? 'mayor o igual a 1' : 'mayor o igual a 0'}.`;
                } else {
                    this.classList.remove('is-invalid');
                    this.nextElementSibling.textContent = '';
                }
            });

            $('#estado').on('change', function () {
                if (!this.value) {
                    this.classList.add('is-invalid');
                    this.nextElementSibling.textContent = 'El estado es obligatorio.';
                } else {
                    this.classList.remove('is-invalid');
                    this.nextElementSibling.textContent = '';
                }
            });

            // Validación del formulario
            $('#materialesForm').on('submit', function (e) {
                e.preventDefault();
                console.log('Datos del formulario:', $(this).serialize());

                const submitBtn = $('#guardarMaterial');
                submitBtn.html('<i class="fas fa-spinner fa-spin"></i> Procesando...');
                submitBtn.prop('disabled', true);

                if ($(this).valid()) {
                    $.ajax({
                        url: '@Url.Action("Create", "Materiales")',
                        type: 'POST',
                        data: $(this).serialize(),
                        success: function (response) {
                            console.log('Respuesta del servidor:', response);
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Material creado',
                                    text: response.message || 'El material se ha creado correctamente.',
                                    confirmButtonColor: '#3085d6',
                                }).then(() => {
                                    window.location.href = '@Url.Action("Index", "Materiales")';
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: response.message || 'Ocurrió un error al crear el material.',
                                    confirmButtonColor: '#3085d6',
                                });
                                submitBtn.html('<i class="fas fa-save"></i> Crear Material');
                                submitBtn.prop('disabled', false);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error AJAX:', {
                                status: xhr.status,
                                statusText: xhr.statusText,
                                response: xhr.responseJSON || xhr.responseText
                            });
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: xhr.responseJSON?.message || 'Ocurrió un error al procesar la solicitud: ' + xhr.statusText,
                                confirmButtonColor: '#3085d6',
                            });
                            submitBtn.html('<i class="fas fa-save"></i> Crear Material');
                            submitBtn.prop('disabled', false);
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Datos incompletos',
                        text: 'Por favor, corrige los errores en el formulario.',
                        confirmButtonColor: '#3085d6',
                    });
                    submitBtn.html('<i class="fas fa-save"></i> Crear Material');
                    submitBtn.prop('disabled', false);
                }
            });
        });
    </script>
}