@model IEnumerable<ClinicDent.Models.Citas>

@{
    ViewBag.Title = "Panel de Recepción";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions {
    public string GetWhatsAppButtonClass(DateTime fechaCita)
    {
        var diasRestantes = (fechaCita.Date - DateTime.Today).TotalDays;

        if (diasRestantes <= 1)
            return "btn-whatsapp-success"; // Verde - 1 día o menos
        else if (diasRestantes <= 3)
            return "btn-whatsapp-warning"; // Amarillo - 2-3 días
        else if (diasRestantes <= 5)
            return "btn-whatsapp-info"; // Azul - 4-5 días
        else
            return "btn-whatsapp-secondary"; // Gris - más de 5 días
    }
}

<div class="container-fluid px-0">
    <!-- Hero Section with Stats -->
    <div class="reception-hero bg-gradient-primary">
        <div class="container py-5">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1 class="text-white mb-3"><i class="fas fa-home me-2"></i>@ViewBag.Title</h1>
                    <p class="text-white-50 mb-4">Gestión integral de citas y pacientes</p>
                </div>
                <div class="col-md-6">
                    <div class="stats-grid">
                        <div class="stat-card">
                            <div class="stat-icon bg-info">
                                <i class="fas fa-calendar-check"></i>
                            </div>
                            <div class="stat-info">
                                <h3>@Model.Count(c => c.fecha_hora.Date == DateTime.Today)</h3>
                                <p>Citas hoy</p>
                            </div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-icon bg-warning">
                                <i class="fas fa-user-clock"></i>
                            </div>
                            <div class="stat-info">
                                <h3>@Model.Count(c => c.estado.ToLower() == "pendiente")</h3>
                                <p>Pendientes</p>
                            </div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-icon bg-success">
                                <i class="fas fa-check-circle"></i>
                            </div>
                            <div class="stat-info">
                                <h3>@Model.Count(c => c.estado.ToLower() == "confirmada")</h3>
                                <p>Confirmadas</p>
                            </div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-icon bg-danger">
                                <i class="fas fa-times-circle"></i>
                            </div>
                            <div class="stat-info">
                                <h3>@Model.Count(c => c.estado.ToLower() == "cancelada")</h3>
                                <p>Canceladas</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container py-4">
        <!-- Quick Actions -->
        <div class="quick-actions mb-4">
            <div class="row g-3">
                <div class="col-md-3">
                    <a href="@Url.Action("Create", "Citas")" class="action-card bg-primary">
                        <div class="action-icon">
                            <i class="fas fa-plus-circle"></i>
                        </div>
                        <div class="action-text">
                            <h5>Nueva Cita</h5>
                            <p>Agendar nueva cita</p>
                        </div>
                    </a>
                </div>
                <div class="col-md-3">
                    <a href="@Url.Action("Calendario", "Citas")" class="action-card bg-info">
                        <div class="action-icon">
                            <i class="fas fa-calendar-alt"></i>
                        </div>
                        <div class="action-text">
                            <h5>Calendario</h5>
                            <p>Ver todas las citas</p>
                        </div>
                    </a>
                </div>
                <div class="col-md-3">
                    <a href="@Url.Action("Create", "Consultas")" class="action-card bg-success">
                        <div class="action-icon">
                            <i class="fas fa-file-medical"></i>
                        </div>
                        <div class="action-text">
                            <h5>Nueva Consulta</h5>
                            <p>Registrar consulta</p>
                        </div>
                    </a>
                </div>
                <div class="col-md-3">
                    <a href="@Url.Action("Index", "Pacientes")" class="action-card bg-purple">
                        <div class="action-icon">
                            <i class="fas fa-user-plus"></i>
                        </div>
                        <div class="action-text">
                            <h5>Nuevo Paciente</h5>
                            <p>Registrar paciente</p>
                        </div>
                    </a>
                </div>
            </div>
        </div>

        <!-- Search and Filter Section -->
        <div class="card shadow-sm mb-4 border-0">
            <div class="card-body">
                <h5 class="card-title mb-4"><i class="fas fa-search me-2"></i>Buscar Citas</h5>
                @using (Html.BeginForm("Index", "Citas", FormMethod.Get))
                {
                    <div class="row g-3 align-items-end">
                        <div class="col-md-5">
                            <label class="form-label mb-1">Buscar citas</label>
                            <div class="input-group">
                                <select name="filterBy" class="form-select" style="width: 160px;">
                                    <option value="ambos" @(ViewBag.FilterBy == "ambos" ? "selected" : "")>Paciente y Dentista</option>
                                    <option value="paciente" @(ViewBag.FilterBy == "paciente" ? "selected" : "")>Paciente</option>
                                    <option value="dentista" @(ViewBag.FilterBy == "dentista" ? "selected" : "")>Dentista</option>
                                </select>
                                <input type="text" name="searchString" class="form-control"
                                       placeholder="Ingrese nombre o estado..." value="@ViewBag.CurrentFilter">
                            </div>
                        </div>

                        <div class="col-md-2">
                            <label class="form-label mb-1">Estado</label>
                            <select name="estadoFilter" class="form-select">
                                <option value="Todos" @(ViewBag.EstadoFilter == "Todos" ? "selected" : "")>Todos</option>
                                @foreach (var estado in ViewBag.Estados)
                                {
                                    <option value="@estado" @(ViewBag.EstadoFilter == estado ? "selected" : "")>@estado</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-2">
                            <label class="form-label mb-1">Fecha</label>
                            <select name="fechaFilter" class="form-select">
                                <option value="" @(String.IsNullOrEmpty(ViewBag.FechaFilter) ? "selected" : "")>Todas</option>
                                <option value="hoy" @(ViewBag.FechaFilter == "hoy" ? "selected" : "")>Hoy</option>
                                <option value="semana" @(ViewBag.FechaFilter == "semana" ? "selected" : "")>Esta semana</option>
                                <option value="mes" @(ViewBag.FechaFilter == "mes" ? "selected" : "")>Este mes</option>
                                <option value="pasadas" @(ViewBag.FechaFilter == "pasadas" ? "selected" : "")>Pasadas</option>
                                <option value="futuras" @(ViewBag.FechaFilter == "futuras" ? "selected" : "")>Futuras</option>
                            </select>
                        </div>

                        <div class="col-md-3 d-flex align-items-end">
                            <div class="d-flex gap-2" style="height: 38px;">
                                <button type="submit" class="btn btn-primary" style="height: 100%;">
                                    <i class="fas fa-search me-1"></i> Buscar
                                </button>
                                @if (!string.IsNullOrEmpty(ViewBag.CurrentFilter) || !string.IsNullOrEmpty(ViewBag.FechaFilter) || ViewBag.EstadoFilter != "Todos")
                                {
                                    <a href="@Url.Action("Index", "Citas")" class="btn btn-outline-secondary" style="height: 100%;">
                                        <i class="fas fa-undo me-1"></i> Limpiar
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Appointments Table -->
        <div class="card shadow-sm border-0">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h5 class="card-title mb-0"><i class="fas fa-list-ul me-2"></i>Próximas Citas</h5>
                    <div class="dropdown">
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-filter me-1"></i>Filtrar
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li><a class="dropdown-item" href="@Url.Action("Index", "Citas", new { fechaFilter = "hoy" })">Citas de hoy</a></li>
                            <li><a class="dropdown-item" href="@Url.Action("Index", "Citas", new { fechaFilter = "semana" })">Esta semana</a></li>
                            <li><a class="dropdown-item" href="@Url.Action("Index", "Citas", new { fechaFilter = "mes" })">Este mes</a></li>
                        </ul>
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Fecha y Hora</th>
                                <th>Paciente</th>
                                <th>Dentista</th>
                                <th>Estado</th>
                                <th class="text-end">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Any())
                            {
                                foreach (var cita in Model)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align瘦 align-items-center">
                                                <div class="date-badge me-3">
                                                    <span class="day">@cita.fecha_hora.ToString("dd")</span>
                                                    <span class="month">@cita.fecha_hora.ToString("MMM", new System.Globalization.CultureInfo("es-MX"))</span>
                                                </div>
                                                <div>
                                                    @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(
                                                        cita.fecha_hora.ToString("dddd h:mm tt", new System.Globalization.CultureInfo("es-MX")).ToLower()
                                                    )
                                                </div>
                                        </td>
                                        <td>@(cita.Pacientes != null ? cita.Pacientes.nombres : "Sin paciente")</td>
                                        <td>@(cita.Dentistas != null ? cita.Dentistas.nombre : "Sin dentista")</td>
                                        <td>
                                            <span class="badge @(cita.estado.ToLower() == "confirmada" ? "bg-success" : cita.estado.ToLower() == "pendiente" ? "bg-warning" : cita.estado.ToLower() == "cancelada" ? "bg-danger" : "bg-info")">
                                                @cita.estado
                                            </span>
                                        </td>
                                        <td class="text-end">
                                            <div class="btn-group" role="group">
                                                <!-- Botón de WhatsApp -->
                                                <a href="javascript:void(0)" class="btn btn-sm btn-whatsapp @GetWhatsAppButtonClass(cita.fecha_hora)"
                                                   title="Notificar por WhatsApp"
                                                   data-id="@cita.id_cita"
                                                   data-phone="@(cita.Pacientes?.telefono ?? "")"
                                                   data-date="@cita.fecha_hora.ToString("dd/MM/yyyy")"
                                                   data-time="@cita.fecha_hora.ToString("hh:mm tt")"
                                                   data-name="@(cita.Pacientes?.nombres ?? "Paciente")">
                                                    <i class="fab fa-whatsapp"></i>
                                                </a>

                                                <!-- Botones existentes -->
                                                <a href="@Url.Action("Edit", "Citas", new { id = cita.id_cita })" class="btn btn-sm btn-outline-primary" title="Editar">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <a href="@Url.Action("Details", "Citas", new { id = cita.id_cita })" class="btn btn-sm btn-outline-info" title="Detalles">
                                                    <i class="fas fa-info-circle"></i>
                                                </a>
                                                <a href="@Url.Action("GenerarConsulta", "Citas", new { idCita = cita.id_cita })" class="btn btn-sm btn-outline-success" title="Generar Consulta">
                                                    <i class="fas fa-file-medical"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="text-center py-4">
                                        <div class="empty-state">
                                            <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                                            <h5>No se encontraron citas</h5>
                                            <p class="text-muted">No hay citas programadas con los filtros actuales</p>
                                            <a href="@Url.Action("Create", "Citas")" class="btn btn-primary mt-2">
                                                <i class="fas fa-plus-circle me-1"></i> Agendar nueva cita
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Hero Section */
    .reception-hero {
        background: linear-gradient(135deg, #3a7bd5 0%, #00d2ff 100%);
        border-radius: 0 0 20px 20px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
    }

    /* Stats Grid */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 15px;
    }

    .stat-card {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        border-radius: 12px;
        padding: 15px;
        display: flex;
        align-items: center;
        color MintCondition: keep-all;
        color: white;
        transition: transform 0.3s ease;
    }

        .stat-card:hover {
            transform: translateY(-5px);
        }

    .stat-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        font-size: 18px;
    }

    .stat-info h3 {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 700;
    }

    .stat-info p {
        margin: 0;
        font-size: 0.85rem;
        opacity: 0.8;
    }

    /* Quick Actions */
    .quick-actions {
        margin-bottom: 2rem;
    }

    .action-card {
        display: flex;
        align-items: center;
        padding: 20px;
        border-radius: 12px;
        color: white;
        text-decoration: none;
        transition: all 0.3s ease;
        height: 100%;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

        .action-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
            color: white;
            text-decoration: none;
        }

    .action-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        font-size: 22px;
        background: rgba(255, 255, 255, 0.2);
    }

    .action-text h5 {
        margin: 0 0 5px 0;
        font-size: 1.1rem;
    }

    .action-text p {
        margin: 0;
        opacity: 0.8;
        font-size: 0.85rem;
    }

    .bg-purple {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    /* Table Styling */
    .table {
        border-collapse: separate;
        border-spacing: 0;
    }

        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.75rem;
            color: #6c757d;
            border-top: none;
            background-color: #f8f9fa;
            padding: 12px 15px;
        }

        .table td {
            vertical-align: middle;
            padding: 15px;
            border-top: 1px solid #f0f0f0;
        }

    .table-hover tbody tr:hover {
        background-color: rgba(13, 110, 253, 0.05);
    }

    /* Date Badge */
    .date-badge {
        width: 45px;
        height: 45px;
        border-radius: 8px;
        background: #f8f9fa;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
    }

        .date-badge .day {
            font-weight: 700;
            font-size: 1.1rem;
            line-height: 1;
        }

        .date-badge .month {
            font-size: 0.7rem;
            text-transform: uppercase;
            color: #6c757d;
            line-height: 1;
            margin-top: 3px;
        }

    /* Empty State */
    .empty-state {
        padding: 40px 0;
        text-align: center;
    }

        .empty-state i {
            margin-bottom: 15px;
        }

    /* WhatsApp Button Styles */
    .btn-whatsapp {
        color: white !important;
        border: none;
        transition: all 0.3s ease;
        position: relative;
    }

    .btn-whatsapp-success {
        background-color: #25D366 !important; /* Verde WhatsApp - Prioridad Alta */
        box-shadow: 0 0 10px rgba(37, 211, 102, 0.5);
    }

    .btn-whatsapp-warning {
        background-color: #FFA500 !important; /* Naranja - Prioridad Media */
        color: white !important;
    }

    .btn-whatsapp-info {
        background-color: #17a2b8 !important; /* Azul - Prioridad Baja */
    }

    .btn-whatsapp-secondary {
        background-color: #6c757d !important; /* Gris - Sin prisa */
        opacity: 0.7;
    }

    /* Efecto hover para todos los botones */
    .btn-whatsapp:hover {
        transform: scale(1.1);
        opacity: 1;
    }

    /* Loading state */
    .btn-whatsapp.loading .fa-whatsapp {
        display: none;
    }

    .btn-whatsapp.loading::after {
        content: '';
        display: inline-block;
        width: 16px;
        height: 16px;
        border: 2px solid #fff;
        border-radius: 50%;
        border-top-color: transparent;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .stats-grid {
            grid-template-columns: 1fr;
        }

        .quick-actions .col-md-3 {
            margin-bottom: 15px;
        }
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Animate stats on load
            $('.stat-card').each(function (i) {
                $(this).delay(i * 200).animate({ opacity: 1 }, 300);
            });

            // Initialize tooltips
            $('[title]').tooltip();

            // Handle WhatsApp button click
            $('.btn-whatsapp').on('click', function (e) {
                e.preventDefault();

                var $button = $(this);
                var idCita = $button.data('id');
                var telefono = $button.data('phone').replace(/\D/g, ''); // Remove non-numeric characters
                var fecha = $button.data('date');
                var hora = $button.data('time');
                var nombre = $button.data('name');

                // Validate data
                if (!idCita || !telefono || !fecha || !hora || !nombre) {
                    console.error('Incomplete data:', { idCita, telefono, fecha, hora, nombre });
                    alert('Faltan datos para enviar el recordatorio. Verifique la información del paciente.');
                    return;
                }

                // Validate phone number (8 digits for El Salvador, plus country code)
                if (telefono.length < 8 || telefono.length > 15) {
                    console.error('Invalid phone number:', telefono);
                    alert('El número de teléfono no es válido (debe tener entre 8 y 15 dígitos).');
                    return;
                }

                // Ensure international format (e.g., +503 for El Salvador)
                if (!telefono.startsWith('+')) {
                    telefono = '+503' + telefono; // Use El Salvador country code
                }

                // Show loading state
                $button.addClass('loading').prop('disabled', true);

                // Format the message
                var mensaje = encodeURIComponent(
                    `Hola ${nombre}, le recordamos su cita en Clínica Dental programada para el ${fecha} a las ${hora}. ` +
                    `Por favor, confirme su asistencia respondiendo este mensaje. ¡Gracias!`
                );

                // Construct WhatsApp URL
                var whatsappUrl = `https://api.whatsapp.com/send?phone=${telefono}&text=${mensaje}`;

                try {
                    // Open WhatsApp
                    window.open(whatsappUrl, '_blank');
                    alert('Recordatorio enviado correctamente.');
                } catch (error) {
                    console.error('Error opening WhatsApp:', error);
                    alert('No se pudo abrir WhatsApp. Intente de nuevo.');
                } finally {
                    // Reset button state
                    $button.removeClass('loading').prop('disabled', false);
                }
            });
        });
    </script>
}