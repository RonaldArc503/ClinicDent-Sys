
@model ClinicDent.Models.ConsultaConTratamientoViewModel

@{
    ViewBag.Title = "Nueva Consulta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />

<style>
    /* Estilos generales (sin cambios) */
    .edit-container {
        max-width: 1000px;
        margin: 20px 0 20px 20px;
        padding: 30px;
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        border-left: 5px solid #17a2b8;
        position: relative;
        z-index: 1;
    }

    .edit-title {
        color: #2c3e50;
        margin-bottom: 25px;
        font-size: 26px;
        font-weight: 600;
        display: flex;
        align-items: center;
        padding-bottom: 15px;
        border-bottom: 1px solid #e9ecef;
    }

    .form-group {
        margin-bottom: 20px;
        display: flex;
        flex-direction: column;
    }

    .control-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 8px;
        text-align: left;
        text-transform: capitalize;
        display: flex;
        align-items: center;
    }

    .label-icon {
        margin-right: 10px;
        color: #6c757d;
        width: 20px;
        text-align: center;
    }

    .form-control {
        border-radius: 20px;
        padding: 10px 15px;
        border: 1px solid #ced4da;
        transition: all 0.3s ease;
        width: 100%;
    }

        .form-control:focus {
            border-color: #17a2b8;
            box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.25);
        }

    .input-icon {
        position: relative;
    }

        .input-icon i {
            position: absolute;
            left: 15px;
            top: 12px;
            color: #6c757d;
        }

        .input-icon input {
            padding-left: 40px;
        }

    .checkbox-container {
        display: flex;
        align-items: center;
        margin-top: 10px;
    }

    .checkbox-label {
        margin-left: 10px;
        cursor: pointer;
    }

    .btn-submit {
        background-color: #17a2b8;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin-top: 20px;
        width: 100%;
        max-width: 200px;
        z-index: 10;
    }

        .btn-submit:hover {
            background-color: #138496;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .btn-back {
        display: inline-block;
        margin-top: 20px;
        color: #6c757d;
        text-decoration: none;
        transition: color 0.3s;
        display: inline-flex;
        align-items: center;
        z-index: 10;
    }

        .btn-back:hover {
            color: #0056b3;
            text-decoration: underline;
        }

    select.form-control {
        appearance: none;
        background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right 15px center;
        background-size: 15px;
    }

    .datetime-input {
        position: relative;
    }

        .datetime-input i {
            position: absolute;
            left: 15px;
            top: 12px;
            color: #6c757d;
            z-index: 1;
        }

        .datetime-input input {
            padding-left: 40px;
        }

    .form-columns {
        display: flex;
        gap: 30px;
    }

    .form-left-column, .form-right-column {
        flex: 1;
    }

    /* Estilos para la sección de tratamientos */
    .tratamiento-section {
        margin-top: 30px;
        padding: 20px;
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        position: relative;
        z-index: 2;
    }

    .tratamiento-title {
        color: #2c3e50;
        margin-bottom: 20px;
        font-size: 22px;
        font-weight: 600;
        display: flex;
        align-items: center;
    }

    .tratamiento-container {
        margin-bottom: 20px;
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        position: relative;
        z-index: 3;
    }

    .btn-add-tratamiento {
        display: none; /* Ocultamos el botón de agregar más tratamientos */
    }

    .odontograma-container {
        margin-top: 15px;
        position: relative;
        z-index: 4;
    }

    .alert.alert-info {
        z-index: 5;
        position: relative;
        pointer-events: none;
    }

        .alert.alert-info * {
            pointer-events: auto;
        }

    .btn-remove-tratamiento {
        background-color: #dc3545;
        color: white;
        padding: 6px 12px;
        border-radius: 5px;
        margin-top: 10px;
        z-index: 10;
    }

        .btn-remove-tratamiento:hover {
            background-color: #c82333;
        }
</style>

<div class="edit-container">
    <h2 class="edit-title">
        <i class="fas fa-calendar-plus" style="margin-right: 12px; color: #17a2b8;"></i> Nueva Consulta
    </h2>

    @using (Html.BeginForm("Create", "Consultas", FormMethod.Post, new { id = "consultaForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-columns">
            <!-- Columna izquierda -->
            <div class="form-left-column">
                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-calendar-check label-icon"></i>Cita (opcional)
                    </label>
                    @Html.DropDownListFor(model => model.IdCita, (SelectList)ViewBag.Citas, "Sin cita", new { @class = "form-control", @id = "id_cita" })
                    @Html.ValidationMessageFor(model => model.IdCita, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-clock label-icon"></i>Fecha de Consulta
                    </label>
                    <div class="datetime-input">
                        @if (ViewBag.FechaConsulta != null)
                        {
                            <input type="text" class="form-control" value="@ViewBag.FechaConsulta" readonly />
                            @Html.HiddenFor(model => model.FechaConsulta)
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.FechaConsulta, "{0:yyyy-MM-ddTHH:mm}", new { @class = "form-control", @type = "datetime-local" })
                        }
                        @Html.ValidationMessageFor(model => model.FechaConsulta, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-user-md label-icon"></i>Dentista
                    </label>
                    @Html.DropDownListFor(model => model.IdDentista, (SelectList)ViewBag.Dentistas, "-- Seleccione un dentista --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdDentista, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-user label-icon"></i>Paciente
                    </label>
                    @Html.DropDownListFor(model => model.IdPaciente, (SelectList)ViewBag.Pacientes, "-- Seleccione un paciente --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdPaciente, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Columna derecha -->
            <div class="form-right-column">
                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-diagnoses label-icon"></i>Diagnóstico
                    </label>
                    @Html.TextAreaFor(model => model.Diagnostico, new { @class = "form-control", @placeholder = "Ingrese los detalles del diagnóstico..." })
                    @Html.ValidationMessageFor(model => model.Diagnostico, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-eye label-icon"></i>Observaciones
                    </label>
                    @Html.TextAreaFor(model => model.Observaciones, new { @class = "form-control", @placeholder = "Ingrese cualquier observación..." })
                    @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-comment-medical label-icon"></i>Recomendaciones
                    </label>
                    @Html.TextAreaFor(model => model.Recomendaciones, new { @class = "form-control", @placeholder = "Ingresa recomendaciones para el paciente..." })
                    @Html.ValidationMessageFor(model => model.Recomendaciones, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="checkbox-container">
                        @Html.EditorFor(model => model.RequiereTratamiento, new { htmlAttributes = new { @class = "form-check-input", @onchange = "toggleTratamiento()" } })
                        <label class="checkbox-label">
                            <i class="fas fa-procedures" style="margin-right: 5px;"></i> Requiere tratamiento
                        </label>
                        @Html.ValidationMessageFor(model => model.RequiereTratamiento, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <!-- Sección de Tratamientos (solo uno) -->
        <div class="tratamiento-section" id="tratamiento_section" style="display: none;">
            <h3 class="tratamiento-title">
                <i class="fas fa-tooth" style="margin-right: 12px; color: #2c3e50;"></i> Tratamiento
            </h3>
            <div id="tratamientos_container"></div>
        </div>

        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 30px;">
            <a href="@Url.Action("Index")" class="btn-back">
                <i class="fas fa-arrow-left"></i> Volver al listado
            </a>
            <button type="submit" class="btn-submit" id="guardarConsulta">
                <i class="fas fa-save"></i> Crear Consulta
            </button>
        </div>
    }
</div>

<!-- Plantilla para tratamiento (índice fijo 0) -->
<script type="text/template" id="tratamiento_template">
    <div class="tratamiento-container" data-index="0">
        <div class="form-group">
            <label class="control-label">
                <i class="fas fa-list label-icon"></i>Tipo de Tratamiento
            </label>
            <select name="Tratamiento.IdTipoCobro" class="form-control tipo-cobro">
                <option value="">-- Seleccione un tipo --</option>
                @foreach (var item in (SelectList)ViewBag.TiposCobro)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
            <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.IdTipoCobro" data-valmsg-replace="true"></span>
        </div>

        <div class="form-group">
            <label class="control-label">
                <i class="fas fa-calendar label-icon"></i>Fecha de Inicio
            </label>
            <input name="Tratamiento.FechaInicio" class="form-control" type="date" value="" />
            <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.FechaInicio" data-valmsg-replace="true"></span>
        </div>

        <div class="form-group">
            <label class="control-label">
                <i class="fas fa-dollar-sign label-icon"></i>Costo
            </label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text">$</span>
                </div>
                <input name="Tratamiento.Costo" class="form-control costo" type="number" step="0.01" min="0" oninput="calcularTotal()" />
            </div>
            <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.Costo" data-valmsg-replace="true"></span>
        </div>

        <div class="form-group">
            <label class="control-label">
                <i class="fas fa-clock label-icon"></i>Duración Estimada (días)
            </label>
            <input name="Tratamiento.DuracionEstimada" class="form-control" type="number" min="1" />
            <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.DuracionEstimada" data-valmsg-replace="true"></span>
        </div>

        <div class="form-group">
            <div class="checkbox-container">
                <input name="Tratamiento.Seguimiento" class="form-check-input" type="checkbox" />
                <label class="checkbox-label">
                    <i class="fas fa-check" style="margin-right: 5px;"></i> Requiere seguimiento
                </label>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label">
                <i class="fas fa-tooth label-icon"></i>Cantidad
            </label>
            <input name="Tratamiento.Cantidad" class="form-control cantidad" type="number" min="1" value="1" oninput="calcularTotal()" />
            <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.Cantidad" data-valmsg-replace="true"></span>
        </div>

        <div class="form-group">
            <label class="control-label">
                <i class="fas fa-dollar-sign label-icon"></i>Total
            </label>
            <input name="Tratamiento.Total" class="form-control total" readonly />
            <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.Total" data-valmsg-replace="true"></span>
        </div>

        <div class="odontograma-container">
            <label class="control-label">
                <i class="fas fa-tooth label-icon"></i>Dientes Afectados
            </label>
            <div class="alert alert-info">
                <i class="fas fa-info-circle"></i> Seleccione los dientes afectados en el diagrama.
                <ul class="mb-0">
                    <li>Seleccione una opción y haga <strong>clic</strong> para marcar partes específicas</li>
                    <li>Use <strong>doble clic</strong> en el centro para marcar pieza faltante o para extraer</li>
                </ul>
            </div>
            <div class="odontograma" id="odontograma_0"></div>
            <input name="Tratamiento.DientesSeleccionados" class="dientes-seleccionados" type="hidden" value="{}" id="dientesSeleccionados_0" />
            <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.DientesSeleccionados" data-valmsg-replace="true"></span>
        </div>

        <button type="button" class="btn-remove-tratamiento" onclick="removerTratamiento()">
            <i class="fas fa-trash"></i> Eliminar Tratamiento
        </button>
    </div>
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            $('#id_cita').focus();

            // Mostrar sección de tratamientos si está marcada
            if ($('#RequiereTratamiento').is(':checked')) {
                $('#tratamiento_section').show();
                agregarTratamiento();
            }

            // Inicializar tratamiento existente si hay datos
            @if (Model != null && Model.Tratamiento != null)
            {
                <text>
                agregarTratamiento({
                    IdTipoCobro: '@Model.Tratamiento.IdTipoCobro',
                    FechaInicio: '@Model.Tratamiento.FechaInicio.ToString("yyyy-MM-dd")',
                    Costo: '@Model.Tratamiento.Costo',
                    DuracionEstimada: '@Model.Tratamiento.DuracionEstimada',
                    Seguimiento: @Model.Tratamiento.Seguimiento.ToString().ToLower(),
                    DientesSeleccionados: '@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(Model.Tratamiento.DientesSeleccionados ?? "{}"))',
                    Cantidad: '@Model.Tratamiento.Cantidad',
                    Total: '@Model.Tratamiento.Total'
                });
                </text>
            }
        });

        function toggleTratamiento() {
            let section = $('#tratamiento_section');
            if ($('#RequiereTratamiento').is(':checked')) {
                section.show();
                // Limpiar contenedor y agregar solo UN tratamiento
                $('#tratamientos_container').empty();
                agregarTratamiento();
            } else {
                section.hide();
                $('#tratamientos_container').empty();
            }
        }

        function calcularTotal() {
            let costo = parseFloat($('input[name="Tratamiento.Costo"]').val()) || 0;
            let cantidad = parseInt($('input[name="Tratamiento.Cantidad"]').val()) || 1;
            $('input[name="Tratamiento.Total"]').val((costo * cantidad).toFixed(2));
        }

        function agregarTratamiento(data = null) {
            let template = $('#tratamiento_template').html();
            $('#tratamientos_container').html(template);

            // Cargar odontograma parcial dinámicamente
            let odontograma = $('#odontograma_0');
            console.log('Cargando odontograma...');

            odontograma.load('@Url.Action("RenderOdontogramaPartial", "Consultas")', { index: 0 }, function (response, status, xhr) {
                if (status === "success") {
                    console.log('Odontograma cargado correctamente');
                    // Inicializar odontograma con datos existentes si se proporcionan
                    if (data && data.DientesSeleccionados) {
                        const inputDientes = $('#dientesSeleccionados_0');
                        inputDientes.val(data.DientesSeleccionados);
                        // La inicialización se maneja en _OdontogramaPartial.cshtml
                    }
                } else {
                    console.error('Error al cargar odontograma:', xhr.status, xhr.statusText);
                    odontograma.html('<p class="text-danger">Error al cargar el odontograma.</p>');
                }
            });

            // Rellenar datos si se proporcionan
            if (data) {
                $('select[name="Tratamiento.IdTipoCobro"]').val(data.IdTipoCobro);
                $('input[name="Tratamiento.FechaInicio"]').val(data.FechaInicio);
                $('input[name="Tratamiento.Costo"]').val(data.Costo);
                $('input[name="Tratamiento.DuracionEstimada"]').val(data.DuracionEstimada);
                $('input[name="Tratamiento.Seguimiento"]').prop('checked', data.Seguimiento);
                $('input[name="Tratamiento.Cantidad"]').val(data.Cantidad);
                $('input[name="Tratamiento.Total"]').val(data.Total);
            }

            // Actualizar validaciones
            $.validator.unobtrusive.parse($('.tratamiento-container'));
        }

        function removerTratamiento() {
            // Desmarcar "Requiere tratamiento" en lugar de eliminar
            $('#RequiereTratamiento').prop('checked', false);
            toggleTratamiento();
        }

        // Validación del formulario
        $('#consultaForm').on('submit', function (e) {
            e.preventDefault();

            const submitBtn = $('#guardarConsulta');
            submitBtn.html('<i class="fas fa-spinner fa-spin"></i> Procesando...');
            submitBtn.prop('disabled', true);

            // Validación del odontograma si requiere tratamiento
            if ($('#RequiereTratamiento').is(':checked')) {
                const dientesSeleccionados = $('#dientesSeleccionados_0').val();
                if (!dientesSeleccionados || dientesSeleccionados === '{}') {
                    Swal.fire({
                        icon: 'error',
                        title: 'Odontograma incompleto',
                        text: 'Por favor, seleccione los dientes afectados en el odontograma.',
                        confirmButtonColor: '#3085d6',
                    }).then(() => {
                        submitBtn.html('<i class="fas fa-save"></i> Crear Consulta');
                        submitBtn.prop('disabled', false);
                    });
                    return;
                }
            }

            // Validar el formulario con jQuery Validation
            if ($(this).valid()) {
                // Enviar el formulario mediante AJAX
                $.ajax({
                    url: '@Url.Action("Create", "Consultas")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Consulta creada',
                                text: response.message,
                                confirmButtonColor: '#3085d6',
                            }).then(() => {
                                window.location.href = '@Url	Action("Index", "Consultas")';
                            });
                        } else {
                            // Mostrar errores del servidor
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message || 'Ocurrió un error al crear la consulta.',
                                confirmButtonColor: '#3085d6',
                            });
                            submitBtn.html('<i class="fas fa-save"></i> Crear Consulta');
                            submitBtn.prop('disabled', false);
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ocurrió un error al procesar la solicitud. Por favor, intenta de nuevo.',
                            confirmButtonColor: '#3085d6',
                        });
                        submitBtn.html('<i class="fas fa-save"></i> Crear Consulta');
                        submitBtn.prop('disabled', false);
                    }
                });
            } else {
                // Mostrar errores de validación del cliente
                Swal.fire({
                    icon: 'error',
                    title: 'Datos incompletos',
                    text: 'Por favor, corrige los errores en el formulario.',
                    confirmButtonColor: '#3085d6',
                });
                submitBtn.html('<i class="fas fa-save"></i> Crear Consulta');
                submitBtn.prop('disabled', false);
            }
        });

        // Prevenir envío del formulario al interactuar con el odontograma
        $(document).on('click dblclick', '.odontograma, .btn-opcion', function (e) {
            e.stopPropagation();
        });
    </script>
}