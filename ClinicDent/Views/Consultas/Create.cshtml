@model ClinicDent.Models.ConsultaConTratamientoViewModel

@{
    ViewBag.Title = "Nueva Consulta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />

<style>
    /* Estilos modernizados */
    .edit-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
    }

    .section-container {
        padding: 2rem;
        margin-bottom: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        border-left: 4px solid #17a2b8;
        background-color: #fff;
    }

    .edit-title {
        color: #2c3e50;
        margin-bottom: 1.5rem;
        font-size: 1.8rem;
        font-weight: 700;
        display: flex;
        align-items: center;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e9ecef;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .control-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        font-size: 0.95rem;
    }

    .label-icon {
        margin-right: 0.75rem;
        color: #6c757d;
        width: 20px;
        text-align: center;
    }

    .form-control, .select2-selection {
        border-radius: 8px;
        padding: 0.75rem 1rem;
        border: 1px solid #e0e0e0;
        transition: all 0.3s ease;
        font-size: 0.95rem;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1); /* Sombreado por defecto */
    }

        .form-control:focus, .select2-selection:focus {
            border-color: #17a2b8;
            box-shadow: 0 4px 8px rgba(23, 162, 184, 0.2);
        }

    textarea.form-control {
        min-height: 100px;
        resize: vertical;
    }

    .checkbox-container {
        display: flex;
        align-items: center;
        margin-top: 0.5rem;
    }

    .checkbox-label {
        margin-left: 0.75rem;
        cursor: pointer;
        font-size: 0.95rem;
    }

    .form-check-input {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Sombreado para checkboxes */
        transition: all 0.3s ease;
    }

        .form-check-input:focus {
            box-shadow: 0 4px 8px rgba(23, 162, 184, 0.2);
            border-color: #17a2b8;
        }

    .btn-submit {
        background-color: #17a2b8;
        color: white;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin-top: 1.5rem;
        width: 100%;
        max-width: 220px;
    }

        .btn-submit:hover {
            background-color: #138496;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    .btn-back {
        display: inline-flex;
        align-items: center;
        color: #6c757d;
        text-decoration: none;
        transition: all 0.3s;
        font-size: 0.95rem;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        background-color: #f8f9fa;
    }

        .btn-back:hover {
            color: #17a2b8;
            background-color: #f1f1f1;
            text-decoration: none;
        }

    /* Estilos para la sección de tratamientos */
    .tratamiento-section {
        margin-top: 2rem;
        padding: 1.5rem;
        background-color: #f8fafc;
        border-radius: 12px;
        border: 1px solid #e9ecef;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .tratamiento-title {
        color: #2c3e50;
        margin-bottom: 1.25rem;
        font-size: 1.4rem;
        font-weight: 600;
        display: flex;
        align-items: center;
    }

    .tratamiento-container {
        margin-bottom: 1.5rem;
        padding: 1.5rem;
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        border: 1px solid #e9ecef;
    }

    .btn-remove-tratamiento {
        background-color: #f8f9fa;
        color: #dc3545;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        border: 1px solid #dc3545;
        font-size: 0.9rem;
        transition: all 0.3s;
    }

        .btn-remove-tratamiento:hover {
            background-color: #dc3545;
            color: white;
        }

    /* Estilos para el selector de fecha/hora */
    .datetime-container {
        position: relative;
    }

    /* Diseño responsive */
    .form-columns {
        display: flex;
        gap: 2rem;
    }

    .form-left-column, .form-right-column {
        flex: 1;
    }

    @@media (max-width: 992px) {
        .form-columns {
            flex-direction: column;
            gap: 1rem;
        }

        .edit-container {
            margin: 1rem;
        }
    }

    /* Mejoras para el odontograma */
    .odontograma-container {
        margin-top: 1.5rem;
    }

    .odontograma-alert {
        background-color: #f8f9fa;
        border-left: 4px solid #17a2b8;
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1rem;
    }

    /* Estilos para select2 */
    .select2-container--bootstrap-5 .select2-selection {
        height: auto;
        min-height: 42px;
        display: flex;
        align-items: center;
    }

    /* Custom switch para seguimiento */
    .form-switch .form-check-input {
        width: 3em;
        height: 1.5em;
        margin-left: 0;
        background-image: none;
        background-color: #e9ecef;
        border: 1px solid #ced4da;
    }

        .form-switch .form-check-input:checked {
            background-color: #17a2b8;
            border-color: #17a2b8;
        }

    /* Sección de información básica */
    .info-section {
        background-color: #f8f9fa;
        border-radius: 12px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    /* Sección de diagnóstico */
    .diagnostico-section {
        background-color: #fff8f1;
        border-left: 4px solid #fd7e14;
    }

    /* Sección de tratamiento */
    .tratamiento-content {
        background-color: #f0f9ff;
        border-left: 4px solid #0d6efd;
    }

    textarea.form-control#Diagnostico {
        min-height: 250px; /* Aumenta la altura mínima */
        min-width: 450px;
    }
</style>

<div class="edit-container">
    <div class="section-container">
        <h2 class="edit-title">
            <i class="fas fa-calendar-plus" style="margin-right: 12px; color: #17a2b8;"></i> Nueva Consulta
        </h2>

        @using (Html.BeginForm("Create", "Consultas", FormMethod.Post, new { id = "consultaForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <!-- Sección de Información Básica -->
            <div class="info-section">
                <h3 class="tratamiento-title">
                    <i class="fas fa-info-circle" style="margin-right: 12px; color: #17a2b8;"></i> Información Básica
                </h3>

                <div class="form-columns">
                    <!-- Columna izquierda -->
                    <div class="form-left-column">
                        <div class="form-group">
                            <label class="control-label">
                                <i class="fas fa-calendar-check label-icon"></i>Cita (opcional)
                            </label>
                            @Html.DropDownListFor(model => model.IdCita, (SelectList)ViewBag.Citas, "Sin cita", new { @class = "form-control select2", @id = "id_cita" })
                            @Html.ValidationMessageFor(model => model.IdCita, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label class="control-label">
                                <i class="fas fa-clock label-icon"></i>Fecha de Consulta
                            </label>
                            @if (ViewBag.FechaConsulta != null)
                            {
                                <input type="text" class="form-control" value="@ViewBag.FechaConsulta" readonly />
                                @Html.HiddenFor(model => model.FechaConsulta)
                            }
                            else
                            {
                                <div class="datetime-container">
                                    <input type="text" id="fechaConsulta" class="form-control" placeholder="Seleccione fecha y hora" />
                                    @Html.HiddenFor(model => model.FechaConsulta, new { @id = "fechaConsultaHidden" })
                                </div>
                            }
                            @Html.ValidationMessageFor(model => model.FechaConsulta, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Columna derecha -->
                    <div class="form-right-column">
                        <div class="form-group">
                            <label class="control-label">
                                <i class="fas fa-user-md label-icon"></i>Dentista
                            </label>
                            @if (ViewBag.DentistaSeleccionado != null)
                            {
                                <input type="text" class="form-control" value="@ViewBag.DentistaSeleccionado" readonly />
                                @Html.HiddenFor(model => model.IdDentista)
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.IdDentista, (SelectList)ViewBag.Dentistas, "-- Seleccione un dentista --", new { @class = "form-control select2" })
                            }
                            @Html.ValidationMessageFor(model => model.IdDentista, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label class="control-label">
                                <i class="fas fa-user label-icon"></i>Paciente
                            </label>
                            @if (ViewBag.PacienteSeleccionado != null)
                            {
                                <input type="text" class="form-control" value="@ViewBag.PacienteSeleccionado" readonly />
                                @Html.HiddenFor(model => model.IdPaciente)
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.IdPaciente, (SelectList)ViewBag.Pacientes, "-- Seleccione un paciente --", new { @class = "form-control select2" })
                            }
                            @Html.ValidationMessageFor(model => model.IdPaciente, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sección de Diagnóstico -->
            <div class="section-container diagnostico-section">
                <h3 class="tratamiento-title">
                    <i class="fas fa-clipboard-check" style="margin-right: 12px; color: #fd7e14;"></i> Diagnóstico
                </h3>

                <div class="form-columns">
                    <div class="form-left-column">
                        <div class="form-group">
                            <label class="control-label">
                                <i class="fas fa-diagnoses label-icon"></i>Diagnóstico
                            </label>
                            @Html.TextAreaFor(model => model.Diagnostico, new { @class = "form-control", @placeholder = "Ingrese los detalles del diagnóstico...", @rows = "4" })
                            @Html.ValidationMessageFor(model => model.Diagnostico, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-right-column">
                        <div class="form-group">
                            <label class="control-label">
                                <i class="fas fa-eye label-icon"></i>Observaciones
                            </label>
                            @Html.TextAreaFor(model => model.Observaciones, new { @class = "form-control", @placeholder = "Ingrese cualquier observación...", @rows = "3" })
                            @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label class="control-label">
                                <i class="fas fa-comment-medical label-icon"></i>Receta Recomendada
                            </label>
                            @Html.TextAreaFor(model => model.Recomendaciones, new { @class = "form-control", @placeholder = "Ingresa recetas para el paciente...", @rows = "3" })
                            @Html.ValidationMessageFor(model => model.Recomendaciones, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sección de Tratamiento -->
            <div class="section-container tratamiento-content">
                <div class="form-group">
                    <div class="checkbox-container">
                        <div class="form-check form-switch">
                            @Html.EditorFor(model => model.RequiereTratamiento, new { htmlAttributes = new { @class = "form-check-input", @id = "RequiereTratamiento", @onchange = "toggleTratamiento()", @role = "switch" } })
                            <label class="form-check-label checkbox-label" for="RequiereTratamiento">
                                <i class="fas fa-procedures" style="margin-right: 5px;"></i> Requiere tratamiento
                            </label>
                        </div>
                        @Html.ValidationMessageFor(model => model.RequiereTratamiento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="tratamiento-section" id="tratamiento_section">
                    <h3 class="tratamiento-title">
                        <i class="fas fa-tooth" style="margin-right: 12px; color: #2c3e50;"></i> Detalles del Tratamiento
                    </h3>
                    <div id="tratamientos_container"></div>
                </div>
            </div>

            <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 2rem;">
                <a href="@Url.Action("Index")" class="btn-back">
                    <i class="fas fa-arrow-left" style="margin-right: 8px;"></i> Volver al listado
                </a>
                <button type="submit" class="btn-submit" id="guardarConsulta">
                    <i class="fas fa-save" style="margin-right: 8px;"></i> Crear Consulta
                </button>
            </div>
        }
    </div>
</div>

<!-- Plantilla para tratamiento -->
<script type="text/template" id="tratamiento_template">
    <div class="tratamiento-container" data-index="0">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-list label-icon"></i>Tipo de Tratamiento
                    </label>
                    <select name="Tratamiento.IdTipoCobro" class="form-control select2 tipo-cobro">
                        <option value="">-- Seleccione un tipo --</option>
                        @foreach (var item in (SelectList)ViewBag.TiposCobro)
                        {
                            <option value="@item.Value" data-precio="@item.Value">@item.Text</option>
                        }
                    </select>
                    <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.IdTipoCobro" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-calendar label-icon"></i>Fecha de Inicio
                    </label>
                    <input name="Tratamiento.FechaInicio" class="form-control datepicker" type="text" placeholder="Seleccione fecha" />
                    <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.FechaInicio" data-valmsg-replace="true"></span>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-dollar-sign label-icon"></i>Costo
                    </label>
                    <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input name="Tratamiento.Costo" class="form-control costo" type="number" step="0.01" min="0" oninput="calcularTotal()" />
                    </div>
                    <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.Costo" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-clock label-icon"></i>Duración (días)
                    </label>
                    <input name="Tratamiento.DuracionEstimada" class="form-control" type="number" min="1" placeholder="Ej. 7" />
                    <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.DuracionEstimada" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-tooth label-icon"></i>Cantidad
                    </label>
                    <input name="Tratamiento.Cantidad" class="form-control cantidad" type="number" min="1" value="1" oninput="calcularTotal()" />
                    <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.Cantidad" data-valmsg-replace="true"></span>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-check-circle label-icon"></i>Seguimiento
                    </label>
                    <div class="form-check form-switch">
                        <input name="Tratamiento.Seguimiento" type="checkbox" class="form-check-input" value="true" />
                        <input type="hidden" name="Tratamiento.Seguimiento" value="false" />
                        <label class="form-check-label">Requiere seguimiento</label>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label">
                        <i class="fas fa-dollar-sign label-icon"></i>Total
                    </label>
                    <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input name="Tratamiento.Total" class="form-control total" readonly />
                    </div>
                    <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.Total" data-valmsg-replace="true"></span>
                </div>
            </div>
        </div>

        <div class="odontograma-container">
            <label class="control-label">
                <i class="fas fa-tooth label-icon"></i>Dientes Afectados
            </label>
            <div class="odontograma-alert">
                <i class="fas fa-info-circle"></i> Seleccione los dientes afectados en el diagrama.
                <ul class="mb-0 mt-2">
                    <li>Seleccione una opción y haga <strong>clic</strong> para marcar partes específicas</li>
                    <li>Use <strong>doble clic</strong> en el centro para marcar pieza faltante o para extraer</li>
                </ul>
            </div>
            <div class="odontograma" id="odontograma_0"></div>
            <input name="Tratamiento.DientesSeleccionados" class="dientes-seleccionados" type="hidden" value="{}" id="dientesSeleccionados_0" />
            <span class="text-danger field-validation-valid" data-valmsg-for="Tratamiento.DientesSeleccionados" data-valmsg-replace="true"></span>
        </div>

        <div class="text-end mt-3">
            <button type="button" class="btn-remove-tratamiento" onclick="removerTratamiento()">
                <i class="fas fa-trash" style="margin-right: 5px;"></i> Eliminar Tratamiento
            </button>
        </div>
    </div>
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/es.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            $('#id_cita').focus();

            // Inicializar select2 solo si no hay valores precargados
    @if (ViewBag.DentistaSeleccionado == null)
    {
        <text>$('#IdDentista').select2({ theme: 'bootstrap-5' });</text>
    }

    @if (ViewBag.PacienteSeleccionado == null)
    {
        <text>$('#IdPaciente').select2({ theme: 'bootstrap-5' });</text>
    }
            // Mostrar sección de tratamientos si está marcada
            if ($('#RequiereTratamiento').is(':checked')) {
                $('#tratamiento_section').show();
                agregarTratamiento();
            }

            // Configuración mejorada para el selector de fecha/hora
            const fechaConsultaPicker = flatpickr("#fechaConsulta", {
                locale: "es",
                enableTime: true,
                dateFormat: "d/m/Y h:i K",
                minDate: "today",
                defaultHour: 9,
                defaultMinute: 0,
                minuteIncrement: 10,
                time_24hr: false,
                onChange: function (selectedDates, dateStr, instance) {
                    // Formatear para el campo hidden en formato ISO
                    const isoDate = selectedDates[0] ? selectedDates[0].toISOString() : '';
                    $('#fechaConsultaHidden').val(isoDate);
                }
            });

            // Inicializar datepicker para fecha de inicio de tratamiento
            $('body').on('focus', '.datepicker', function () {
                flatpickr(this, {
                    locale: "es",
                    dateFormat: "d/m/Y",
                    minDate: "today"
                });
            });

            // Inicializar tratamiento existente si hay datos
            @if (Model != null && Model.Tratamiento != null)
            {
                <text>
                agregarTratamiento({
                    IdTipoCobro: '@Model.Tratamiento.IdTipoCobro',
                    FechaInicio: '@Model.Tratamiento.FechaInicio.ToString("yyyy-MM-dd")',
                    Costo: '@Model.Tratamiento.Costo',
                    DuracionEstimada: '@Model.Tratamiento.DuracionEstimada',
                    Seguimiento: @(Model.Tratamiento.Seguimiento ? "1" : "0"),
                    DientesSeleccionados: '@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(Model.Tratamiento.DientesSeleccionados ?? "{}"))',
                    Cantidad: '@Model.Tratamiento.Cantidad',
                    Total: '@Model.Tratamiento.Total'
                });
                </text>
            }
        });

        function toggleTratamiento() {
            let section = $('#tratamiento_section');
            if ($('#RequiereTratamiento').is(':checked')) {
                section.show();
                // Limpiar contenedor y agregar solo UN tratamiento
                $('#tratamientos_container').empty();
                agregarTratamiento();
            } else {
                section.hide();
                $('#tratamientos_container').empty();
            }
        }

        function calcularTotal() {
            let costo = parseFloat($('input[name="Tratamiento.Costo"]').val()) || 0;
            let cantidad = parseInt($('input[name="Tratamiento.Cantidad"]').val()) || 1;
            $('input[name="Tratamiento.Total"]').val((costo * cantidad).toFixed(2));
        }

        function agregarTratamiento(data = null) {
            let template = $('#tratamiento_template').html();
            $('#tratamientos_container').html(template);

            // Cargar odontograma parcial dinámicamente
            let odontograma = $('#odontograma_0');
            console.log('Cargando odontograma para index 0, initial data:', data);

            odontograma.load('@Url.Action("RenderOdontogramaPartial", "Consultas")', { index: 0 }, function (response, status, xhr) {
                if (status === "success") {
                    console.log('Odontograma cargado correctamente');

                    // Inicializar manualmente el odontograma después de cargar
                    setTimeout(function() {
                        if (typeof initOdontograma === 'function') {
                            initOdontograma('odontograma_0', 'dientesSeleccionados_0');

                            // Cargar datos existentes si los hay
                            if (data && data.DientesSeleccionados) {
                                try {
                                    const estadoInicial = JSON.parse(data.DientesSeleccionados);
                                    window.odontogramaStates['odontograma_0'] = estadoInicial;

                                    // Actualizar el campo oculto
                                    $('#dientesSeleccionados_0').val(data.DientesSeleccionados);

                                    // Forzar la actualización visual
                                    const container = document.getElementById('odontograma_0');
                                    if (container) {
                                        aplicarEstadoInicial(container, estadoInicial);
                                        dibujarConexiones(container, estadoInicial);
                                    }
                                } catch(e) {
                                    console.error('Error parsing DientesSeleccionados:', e);
                                }
                            }
                        } else {
                            console.error('initOdontograma function not found');
                        }
                    }, 100);
                } else {
                    console.error('Error al cargar odontograma:', {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText.substring(0, 200)
                    });
                    odontograma.html('<p class="text-danger">Error al cargar el odontograma: ' + xhr.statusText + '</p>');
                }
            });

            // Rellenar datos si se proporcionan
            if (data) {
                $('select[name="Tratamiento.IdTipoCobro"]').val(data.IdTipoCobro);
                $('input[name="Tratamiento.FechaInicio"]').val(data.FechaInicio);
                $('input[name="Tratamiento.Costo"]').val(data.Costo);
                $('input[name="Tratamiento.DuracionEstimada"]').val(data.DuracionEstimada);
                $('input[name="Tratamiento.Seguimiento"][type=checkbox]').prop('checked', data.Seguimiento === '1' || data.Seguimiento === true);
                $('input[name="Tratamiento.Cantidad"]').val(data.Cantidad);
                $('input[name="Tratamiento.Total"]').val(data.Total);
            }

            // Actualizar validaciones
            $.validator.unobtrusive.parse($('.tratamiento-container'));
        }

        function removerTratamiento() {
            // Desmarcar "Requiere tratamiento" en lugar de eliminar
            $('#RequiereTratamiento').prop('checked', false);
            toggleTratamiento();
        }

        // Validación del formulario
        $('#consultaForm').on('submit', function (e) {
            e.preventDefault();

            const submitBtn = $('#guardarConsulta');
            submitBtn.html('<i class="fas fa-spinner fa-spin"></i> Procesando...');
            submitBtn.prop('disabled', true);

            // Validar el formulario con jQuery Validation
            if ($(this).valid()) {
                // Enviar el formulario mediante AJAX
                $.ajax({
                    url: '@Url.Action("Create", "Consultas")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Consulta creada',
                                text: response.message,
                                confirmButtonColor: '#3085d6',
                            }).then(() => {
                                window.location.href = '@Url.Action("Index", "Consultas")';
                            });
                        } else {
                            // Mostrar errores del servidor
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message || 'Ocurrió un error al crear la consulta.',
                                confirmButtonColor: '#3085d6',
                            });
                            submitBtn.html('<i class="fas fa-save"></i> Crear Consulta');
                            submitBtn.prop('disabled', false);
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ocurrió un error al procesar la solicitud. Por favor, intenta de nuevo.',
                            confirmButtonColor: '#3085d6',
                        });
                        submitBtn.html('<i class="fas fa-save"></i> Crear Consulta');
                        submitBtn.prop('disabled', false);
                    }
                });
            } else {
                // Mostrar errores de validación del cliente
                Swal.fire({
                    icon: 'error',
                    title: 'Datos incompletos',
                    text: 'Por favor, corrige los errores en el formulario.',
                    confirmButtonColor: '#3085d6',
                });
                submitBtn.html('<i class="fas fa-save"></i> Crear Consulta');
                submitBtn.prop('disabled', false);
            }
        });

        // Prevenir envío del formulario al interactuar con el odontograma
        $(document).on('click dblclick', '.odontograma, .btn-opcion', function (e) {
            e.stopPropagation();
        });
    </script>
}