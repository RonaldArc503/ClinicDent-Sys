@model ClinicDent.Models.Tratamientos

@{
    ViewBag.Title = Model.id_tratamiento == 0 ? "Crear Tratamiento" : "Editar Tratamiento";
    var isEditMode = Model.id_tratamiento != 0;
}

<div class="container">
    <h2>@ViewBag.Title</h2>

    <!-- Mensajes de estado -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @using (Html.BeginForm(isEditMode ? "Edit" : "Create", "Tratamientos", FormMethod.Post, new { id = "tratamientoForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.id_tratamiento)

        <div class="card">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">Datos del Tratamiento</h4>
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <!-- Tipo de Cobro -->
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.id_tipo_cobro, "Tipo de Tratamiento", htmlAttributes: new { @class = "control-label font-weight-bold" })
                            @Html.DropDownListFor(model => model.id_tipo_cobro, (SelectList)ViewBag.id_tipo_cobro, "-- Seleccione un tipo --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.id_tipo_cobro, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Fecha de Inicio -->
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.fecha_inicio, htmlAttributes: new { @class = "control-label font-weight-bold" })
                            @Html.EditorFor(model => model.fecha_inicio, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.fecha_inicio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- Costo -->
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.costo, htmlAttributes: new { @class = "control-label font-weight-bold" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">$</span>
                                </div>
                                @Html.EditorFor(model => model.costo, new { htmlAttributes = new { @class = "form-control", min = "0", step = "0.01", placeholder = "0.00" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.costo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Duración Estimada -->
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.duracion_estimada, "Duración Estimada (días)", htmlAttributes: new { @class = "control-label font-weight-bold" })
                            @Html.EditorFor(model => model.duracion_estimada, new { htmlAttributes = new { @class = "form-control", min = "1", placeholder = "1" } })
                            @Html.ValidationMessageFor(model => model.duracion_estimada, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <!-- Seguimiento -->
                <div class="form-group">
                    <div class="custom-control custom-checkbox">
                        @Html.CheckBoxFor(model => model.seguimiento, new { @class = "custom-control-input" })
                        @Html.LabelFor(model => model.seguimiento, "Requiere seguimiento", new { @class = "custom-control-label font-weight-bold" })
                        @Html.ValidationMessageFor(model => model.seguimiento, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <!-- Odontograma -->
        <div class="card mt-4">
            <div class="card-header bg-info text-white">
                <h4 class="mb-0">Odontograma</h4>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label class="font-weight-bold">Dientes afectados</label>
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i> Seleccione los dientes afectados en el diagrama.
                        <ul class="mb-0">
                            <li>Use <strong>clic</strong> para marcar partes específicas</li>
                            <li>Use <strong>doble clic</strong> en el centro para marcar el diente completo</li>
                        </ul>
                    </div>

                    <!-- Incluir el odontograma -->
                    @Html.Partial("_OdontogramaPartial")

                    <!-- Campo oculto para los dientes seleccionados -->
                    @Html.HiddenFor(model => model.dientes_seleccionados, new { id = "dientesSeleccionados" })
                    @Html.ValidationMessageFor(model => model.dientes_seleccionados, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!-- Botones de acción -->
        <div class="form-group mt-4">
            <button type="submit" class="btn btn-primary" id="guardarTratamiento">
                <i class="fas fa-save"></i> @(isEditMode ? "Actualizar" : "Guardar")
            </button>
            <a href="@Url.Action("Index")" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Cancelar
            </a>

            @if (isEditMode)
            {
                <button type="button" class="btn btn-outline-danger float-right" data-toggle="modal" data-target="#deleteModal">
                    <i class="fas fa-trash-alt"></i> Eliminar
                </button>
            }
        </div>
    }
</div>

<!-- Modal de confirmación para eliminar -->
@if (isEditMode)
{
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteModalLabel">Confirmar Eliminación</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    ¿Está seguro que desea eliminar este tratamiento? Esta acción no se puede deshacer.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    @using (Html.BeginForm("Delete", "Tratamientos", new { id = Model.id_tratamiento }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash-alt"></i> Eliminar
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
}


    <style>
        .card {
            border-radius: 0.5rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        .card-header {
            border-radius: 0.5rem 0.5rem 0 0 !important;
        }

        .form-control, .custom-select {
            border-radius: 0.25rem;
        }

        .input-group-text {
            background-color: #f8f9fa;
        }

        .alert ul {
            padding-left: 1.5rem;
            margin-bottom: 0;
        }
    </style>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

    <script>
        $(document).ready(function () {
            // Inicializar el odontograma con datos existentes si estamos en modo edición
            @if (isEditMode && !string.IsNullOrEmpty(Model.dientes_seleccionados))
            {
                <text>
                inicializarOdontograma('@Html.Raw(Model.dientes_seleccionados)');
                </text>
            }

            // Validación del formulario antes de enviar
            $('#tratamientoForm').on('submit', function (e) {
                // Validar que haya selecciones en el odontograma
                const dientesSeleccionados = $('#dientesSeleccionados').val();
                if (!dientesSeleccionados || dientesSeleccionados === '{}') {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'error',
                        title: 'Odontograma incompleto',
                        text: 'Por favor, seleccione al menos un diente o parte en el odontograma.',
                        confirmButtonColor: '#3085d6',
                    });
                    return false;
                }

                // Mostrar carga mientras se procesa
                $('#guardarTratamiento').html('<i class="fas fa-spinner fa-spin"></i> Procesando...');
                $('#guardarTratamiento').prop('disabled', true);
            });

            // Prevenir envío del formulario al interactuar con el odontograma
            $('.odontograma').on('click dblclick', function (e) {
                e.stopPropagation();
            });

            // Inicializar tooltips
            $('[data-toggle="tooltip"]').tooltip();
        });

        // Función para inicializar el odontograma con datos existentes
        function inicializarOdontograma(datos) {
            if (!datos || datos === '') return;

            try {
                const estadoOdontograma = JSON.parse(datos.replace(/&quot;/g, '"'));
                estadoOdontogramaGuardado = estadoOdontograma;

                Object.keys(estadoOdontograma).forEach(dienteId => {
                    const dienteContainer = document.querySelector(`.diente-container[data-diente-id="${dienteId}"]`);
                    if (!dienteContainer) return;

                    // Aplicar tratamientos a las partes
                    const partes = estadoOdontograma[dienteId].partes || {};
                    Object.keys(partes).forEach(parte => {
                        const elementoParte = dienteContainer.querySelector(`.diente-parte[data-parte="${parte}"]`);
                        if (elementoParte) {
                            elementoParte.classList.add(`tratamiento-${partes[parte]}`);
                        }
                    });

                    // Aplicar marcas (faltante/extraer)
                    const marca = estadoOdontograma[dienteId].marca;
                    if (marca) {
                        const marcaElemento = dienteContainer.querySelector(`.marca-${marca}`);
                        if (marcaElemento) {
                            marcaElemento.style.display = 'block';
                        }
                    }
                });

                // Actualizar el campo oculto
                $('#dientesSeleccionados').val(datos);
            } catch (e) {
                console.error('Error al inicializar odontograma:', e);
            }
        }
    </script>
}