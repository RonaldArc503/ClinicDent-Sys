@model ClinicDent.Models.Pacientes

@{
    ViewBag.Title = "Editar Paciente";
}

<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

<style>
    .form-container {
        max-width: 700px;
        margin: 0 0 0 10px;
        padding: 25px 25px 25px 15px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }

    .form-title {
        color: #2c3e50;
        margin-bottom: 25px;
        text-align: left;
        font-size: 24px;
        padding-left: 5px;
    }

    .form-group {
        margin-bottom: 20px;
        display: flex;
        flex-direction: column;
        padding-left: 5px;
    }

    .control-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 8px;
        text-align: left;
    }

    .form-control {
        border-radius: 20px;
        padding: 10px 12px;
        border: 1px solid #ced4da;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        width: 100%;
        margin-left: 0;
    }

        .form-control:focus {
            border-color: #80bdff;
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

    .btn-submit {
        background-color: #28a745;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s;
        margin: 10px 0 0 0;
        align-self: flex-start;
    }

        .btn-submit:hover {
            background-color: #218838;
        }

    .btn-back {
        display: inline-block;
        margin: 20px 0 0 5px;
        color: #6c757d;
        text-decoration: none;
        transition: color 0.3s;
    }

        .btn-back:hover {
            color: #0056b3;
            text-decoration: underline;
        }

    .input-icon {
        position: relative;
    }

        .input-icon i {
            position: absolute;
            left: 10px;
            top: 10px;
            color: #6c757d;
        }

        .input-icon input {
            padding-left: 35px;
        }

    .gender-options {
        display: flex;
        gap: 15px;
        margin: 5px 0 0 0;
        padding-left: 0;
    }

    .gender-option {
        display: flex;
        align-items: center;
    }

        .gender-option input {
            margin-right: 5px;
        }

    .checkbox-label {
        display: flex;
        align-items: center;
        cursor: pointer;
        margin-left: 0;
    }

        .checkbox-label input {
            margin-right: 8px;
        }

    .field-required::after {
        content: " *";
        color: #dc3545;
    }

    textarea.form-control {
        min-height: 100px;
        resize: vertical;
        margin-left: 0;
    }
</style>

<div class="form-container">
    <h2 class="form-title"><i class="fas fa-user-edit"></i> Editar Paciente</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id_paciente)

    <div class="form-group">
        <label class="control-label required">
            <i class="fas fa-user"></i> Nombres
        </label>
        <div>
            @Html.EditorFor(model => model.nombres, new { htmlAttributes = new { @class = "form-control", placeholder = "nombres del paciente", required = "required" } })
            @Html.ValidationMessageFor(model => model.nombres, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label required">
            <i class="fas fa-user"></i> Apellidos
        </label>
        <div>
            @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese los apellidos del paciente", required = "required" } })
            @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label required">
            <i class="fas fa-calendar-alt"></i> Fecha de Nacimiento
        </label>
        <div class="input-icon">
            <input type="text" id="fecha_nacimiento" name="fecha_nacimiento"
                   class="form-control datepicker"
                   value="@Model.fecha_nacimiento.ToString("yyyy-MM-dd")"
                   placeholder="Seleccione la fecha"
                   required
                   autocomplete="off" />
            @Html.ValidationMessageFor(model => model.fecha_nacimiento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label">
            <i class="fas fa-phone"></i> Teléfono
        </label>
        <div>
            @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese el número de teléfono", id = "telefono" } })
            @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label">
            <i class="fas fa-venus-mars"></i> Género
        </label>
        <div class="gender-options">
            <label class="gender-option">
                @Html.RadioButtonFor(model => model.genero, "Masculino") Masculino
            </label>
            <label class="gender-option">
                @Html.RadioButtonFor(model => model.genero, "Femenino") Femenino
            </label>
        </div>
        @Html.ValidationMessageFor(model => model.genero, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label class="control-label">
            <i class="fas fa-allergies"></i> Alergias
        </label>
        <div>
            @Html.TextAreaFor(model => model.alergias, new { @class = "form-control", placeholder = "Liste las alergias conocidas (separadas por comas)", rows = "3" })
            @Html.ValidationMessageFor(model => model.alergias, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label">
            <i class="fas fa-check-circle"></i> Estado
        </label>
        <div>
            <label class="checkbox-label">
                @Html.CheckBoxFor(model => model.activo) Activo
            </label>
            @Html.ValidationMessageFor(model => model.activo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <button type="submit" class="btn-submit">
            <i class="fas fa-save"></i> Guardar Cambios
        </button>
    </div>
</div>
    }

    <div>
        <a href="@Url.Action("Index")" class="btn-back">
            <i class="fas fa-arrow-left"></i> Volver al Listado
        </a>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>

    <script>
        $(document).ready(function () {
            // Configuración del datepicker
            $("#fecha_nacimiento").datepicker({
                dateFormat: "yy-mm-dd", // Formato compatible con el modelo
                changeMonth: true,
                changeYear: true,
                yearRange: "1900:+0",
                maxDate: "0",
                dayNames: ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"],
                dayNamesMin: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sa"],
                monthNames: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
                monthNamesShort: ["Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"],
                prevText: "Anterior",
                nextText: "Siguiente",
                currentText: "Hoy",
                closeText: "Cerrar",
                onSelect: function (dateText, inst) {
                    // Asegurar que la fecha se mantenga seleccionada
                    $(this).val(dateText);
                },
                onClose: function (dateText, inst) {
                    // Forzar el formato al cerrar
                    if (dateText) {
                        $(this).datepicker("setDate", dateText);
                    }
                }
            });


            // Máscara para el teléfono
            $('#telefono').mask('0000-0000', { placeholder: "____-____" });

            // Validación en tiempo real para nombres y apellidos (solo letras y espacios)
            $('#nombres, #apellidos').on('input', function () {
                this.value = this.value.replace(/[^a-zA-ZáéíóúÁÉÍÓÚñÑ\s]/g, '');
            });

            // Enfoque automático en el primer campo
            $('#nombres').focus();
        });
    </script>
}