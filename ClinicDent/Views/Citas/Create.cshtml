@model ClinicDent.Models.Citas

@{
    ViewBag.Title = "Programar Nueva Cita";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />

<style>
    .edit-container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 0;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
    }

    .section-container {
        padding: 2rem;
        margin-bottom: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        border-left: 4px solid #17a2b8;
        background-color: #fff;
    }

    .edit-title {
        color: #2c3e50;
        margin-bottom: 1.5rem;
        font-size: 1.8rem;
        font-weight: 700;
        display: flex;
        align-items: center;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e9ecef;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .control-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        font-size: 0.95rem;
    }

    .label-icon {
        margin-right: 0.75rem;
        color: #6c757d;
        width: 20px;
        text-align: center;
    }

    .form-control, .select2-selection {
        border-radius: 8px;
        padding: 0.75rem 1rem;
        border: 1px solid #e0e0e0;
        transition: all 0.3s ease;
        font-size: 0.95rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .form-control:focus, .select2-selection:focus {
            border-color: #17a2b8;
            box-shadow: 0 4px 8px rgba(23, 162, 184, 0.2);
        }

    .btn-submit {
        background-color: #17a2b8;
        color: white;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin-top: 1.5rem;
        width: 100%;
        max-width: 220px;
    }

        .btn-submit:hover {
            background-color: #138496;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    .btn-back {
        display: inline-flex;
        align-items: center;
        color: #6c757d;
        text-decoration: none;
        transition: all 0.3s;
        font-size: 0.95rem;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        background-color: #f8f9fa;
    }

        .btn-back:hover {
            color: #17a2b8;
            background-color: #f1f1f1;
            text-decoration: none;
        }

    .datetime-container {
        position: relative;
    }

    .flatpickr-calendar {
        transform: translateY(140px) !important;
        margin-top: -20px;
    }

    @@media (max-width: 768px) {
        .flatpickr-calendar {
            transform: translateY(-100px) !important;
        }
    }

    .form-columns {
        display: flex;
        gap: 2rem;
    }

    .form-left-column, .form-right-column {
        flex: 1;
    }

    @@media (max-width: 992px) {
        .form-columns {
            flex-direction: column;
            gap: 1rem;
        }

        .edit-container {
            margin: 1rem;
        }
    }

    .select2-container--bootstrap-5 .select2-selection {
        height: auto;
        min-height: 42px;
        display: flex;
        align-items: center;
    }

    .is-validating {
        background-color: #fff8e1;
    }

    .flatpickr-time .flatpickr-time-separator,
    .flatpickr-time .flatpickr-am-pm,
    .flatpickr-time input.disabled,
    .flatpickr-hour.disabled,
    .flatpickr-minute.disabled {
        opacity: 0.5;
        pointer-events: none;
    }

    .time-validation-message {
        color: #dc3545;
        font-size: 0.85rem;
        margin-top: 0.5rem;
        display: none;
    }

    .flatpickr-am-pm {
        cursor: pointer;
        transition: all 0.2s;
        pointer-events: auto !important;
        color: #000 !important;
        opacity: 1 !important;
    }

        .flatpickr-am-pm:hover {
            background-color: #f0f0f0;
        }
</style>

<div class="edit-container">
    <div class="section-container">
        <h2 class="edit-title">
            <i class="fas fa-calendar-plus" style="margin-right: 12px; color: #17a2b8;"></i> Programar Nueva Cita
        </h2>

        @using (Html.BeginForm("Create", "Citas", FormMethod.Post, new { id = "citaForm", autocomplete = "off" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-columns">
                <!-- Columna izquierda -->
                <div class="form-left-column">
                    <div class="form-group">
                        <label class="control-label">
                            <i class="fas fa-user label-icon"></i>Paciente
                        </label>
                        @Html.DropDownListFor(model => model.id_paciente, (SelectList)ViewBag.Pacientes, "-- Seleccione un paciente --", new { @class = "form-control select2", required = "required", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.id_paciente, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="control-label">
                            <i class="fas fa-clock label-icon"></i>Fecha y Hora
                        </label>
                        <div class="datetime-container">
                            <input type="text" id="fecha_hora" name="fecha_hora" class="form-control" placeholder="Seleccione fecha y hora" readonly autocomplete="off" />
                            <div id="timeValidationMessage" class="time-validation-message">
                                <i class="fas fa-exclamation-circle"></i> La hora seleccionada ya ha pasado
                            </div>
                            <div id="dentistaOcupadoMessage" class="time-validation-message">
                                <i class="fas fa-exclamation-circle"></i> El dentista no está disponible en este horario
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.fecha_hora, "", new { @class = "text-danger" })
                        <small class="text-muted">Seleccione fecha y hora para la cita</small>
                    </div>
                </div>

                <!-- Columna derecha -->
                <div class="form-right-column">
                    <div class="form-group">
                        <label class="control-label">
                            <i class="fas fa-user-md label-icon"></i>Dentista
                        </label>
                        @Html.DropDownListFor(model => model.id_dentista, (SelectList)ViewBag.Dentistas, "-- Seleccione un dentista --", new { @class = "form-control select2", required = "required", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.id_dentista, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="control-label">
                            <i class="fas fa-info-circle label-icon"></i>Estado
                        </label>
                        @Html.DropDownListFor(model => model.estado, new List<SelectListItem>
                                        {
                            new SelectListItem { Text = "Pendiente", Value = "Pendiente", Selected = true },
                            new SelectListItem { Text = "Confirmada", Value = "Confirmada" },
                            new SelectListItem { Text = "Cancelada", Value = "Cancelada" }
                        }, new { @class = "form-control select2", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 2rem;">
                <a href="@Url.Action("Index")" class="btn-back">
                    <i class="fas fa-arrow-left" style="margin-right: 8px;"></i> Volver al listado
                </a>
                <button type="submit" class="btn-submit" id="guardarCita">
                    <i class="fas fa-save" style="margin-right: 8px;"></i> Guardar Cita
                </button>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/es.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            // Inicializar Select2
            $('.select2').select2({
                theme: 'bootstrap-5',
                width: '100%',
                placeholder: $(this).data('placeholder') || 'Seleccione una opción',
                allowClear: true
            });

            // Hora predeterminada
            function getDefaultTime() {
                const now = new Date();
                const currentMinutes = now.getMinutes();
                const currentHour = now.getHours();
                if (currentMinutes < 30) {
                    return { hour: currentHour, minute: 30 };
                } else {
                    return { hour: currentHour + 1, minute: 0 };
                }
            }

            // Flatpickr
            const defaultTime = getDefaultTime();
            const fp = flatpickr("#fecha_hora", {
                locale: "es",
                enableTime: true,
                dateFormat: "d/m/Y h:i K", // Formato de visualización
                altFormat: "d/m/Y h:i K", // Formato alternativo
                altInput: true,
                minDate: "today",
                defaultHour: defaultTime.hour,
                defaultMinute: defaultTime.minute,
                minuteIncrement: 10,
                time_24hr: false,
                position: "above",
                allowInput: false,
                clickOpens: true,
                disable: [],
                onChange: function(selectedDates, dateStr, instance) {
                    // Guardar el valor ISO en un campo hidden
                    const isoDate = selectedDates[0] ? selectedDates[0].toISOString() : '';
                    $('#fecha_horaHidden').val(isoDate);

                    if (selectedDates[0] && selectedDates[0] < new Date()) {
                        $('#timeValidationMessage').show();
                        $('#dentistaOcupadoMessage').hide();
                        $('#fecha_hora').val('');
                        $('#fecha_horaHidden').val('');
                    } else {
                        $('#timeValidationMessage').hide();
                        validateAvailability();
                    }
                }
            });

            // Validación de disponibilidad en tiempo real
            function validateAvailability() {
                var fechaHoraISO = $('#fecha_horaHidden').val();
                var fechaHoraVisible = $('#fecha_hora').val();
                var idDentista = $('#id_dentista').val();
                var idPaciente = $('#id_paciente').val();

                if (!fechaHoraISO || !fechaHoraVisible || !idDentista || !idPaciente) return;

                // Convertir a objeto Date para los intervalos
                var fechaSeleccionada = new Date(fechaHoraISO);
                var horaInicio = new Date(fechaSeleccionada);
                var horaFin = new Date(fechaSeleccionada);
                horaInicio.setMinutes(horaInicio.getMinutes() - 40);
                horaFin.setMinutes(horaFin.getMinutes() + 40);

                $.ajax({
                    url: '@Url.Action("ValidarDisponibilidad", "Citas")',
                    type: 'GET',
                    data: {
                        id_dentista: idDentista,
                        id_paciente: idPaciente,
                        fecha_hora: fechaHoraVisible, // Enviamos el formato legible
                        hora_inicio: horaInicio.toISOString(),
                        hora_fin: horaFin.toISOString()
                    },
                    beforeSend: function() {
                        $('#fecha_hora').addClass('is-validating');
                    },
                    success: function(response) {
                        $('#dentistaOcupadoMessage').hide();
                        $('#timeValidationMessage').hide();

                        if (!response.disponible) {
                            if (response.motivo === 'dentista_ocupado') {
                                $('#dentistaOcupadoMessage').show();
                            } else if (response.motivo === 'paciente_con_dentista') {
                                $('#timeValidationMessage').text(response.mensaje).show();
                            }
                            $('#fecha_hora').val('');
                            $('#fecha_horaHidden').val('');
                        }
                    },
                    complete: function() {
                        $('#fecha_hora').removeClass('is-validating');
                    },
                    error: function() {
                        $('#fecha_hora').val('');
                        $('#fecha_horaHidden').val('');
                        $('#dentistaOcupadoMessage').hide();
                        $('#timeValidationMessage').text('Error al validar disponibilidad').show();
                    }
                });
            }

            // Modificar el envío del formulario para asegurar el formato correcto
            $('#citaForm').on('submit', function(e) {
                e.preventDefault();

                // Asegurarnos de que el campo hidden tenga el valor correcto
                const selectedDate = fp.selectedDates[0];
                if (selectedDate) {
                    $('#fecha_horaHidden').val(selectedDate.toISOString());
                }

                const submitBtn = $('#guardarCita');
                submitBtn.html('<i class="fas fa-spinner fa-spin"></i> Procesando...');
                submitBtn.prop('disabled', true);

                if ($(this).valid()) {
                    var formData = $(this).serialize();
                    $.ajax({
                        url: '@Url.Action("Create", "Citas")',
                        type: 'POST',
                        data: formData,
                        success: function(response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Cita creada',
                                    text: response.message || 'La cita se ha programado correctamente.',
                                    confirmButtonColor: '#17a2b8'
                                }).then(() => {
                                    window.location.href = '@Url.Action("Index", "Citas")';
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: response.message || 'Ocurrió un error al crear la cita.',
                                    confirmButtonColor: '#17a2b8'
                                });
                                submitBtn.html('<i class="fas fa-save"></i> Guardar Cita');
                                submitBtn.prop('disabled', false);
                            }
                        },
                        error: function(xhr) {
                            let errorMsg = 'Ocurrió un error al procesar la solicitud.';
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMsg = xhr.responseJSON.message;
                            }
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: errorMsg,
                                confirmButtonColor: '#17a2b8'
                            });
                            submitBtn.html('<i class="fas fa-save"></i> Guardar Cita');
                            submitBtn.prop('disabled', false);
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Datos incompletos',
                        text: 'Por favor, corrige los errores en el formulario.',
                        confirmButtonColor: '#17a2b8'
                    });
                    submitBtn.html('<i class="fas fa-save"></i> Guardar Cita');
                    submitBtn.prop('disabled', false);
                }
            });

            $('#fecha_hora, #id_dentista, #id_paciente').change(validateAvailability);
        });
    </script>
}