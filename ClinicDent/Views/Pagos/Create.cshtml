@model ClinicDent.Models.PagoCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Pagos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.IdConsulta, "Consulta", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdConsulta", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdConsulta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaPago, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaPago, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.FechaPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MontoTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MontoTotal, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                @Html.ValidationMessageFor(model => model.MontoTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetodoPago, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MetodoPago", (SelectList)ViewBag.MetodoPago, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MetodoPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoPago, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoPago", (SelectList)ViewBag.TipoPago, htmlAttributes: new { @class = "form-control", id = "TipoPago" })
                @Html.ValidationMessageFor(model => model.TipoPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="cuotasSection" style="display: none;">
            <label class="control-label col-md-2">Cuotas</label>
            <div class="col-md-10">
                <div id="cuotasContainer"></div>
                <button type="button" onclick="agregarCuota()" class="btn btn-secondary">Agregar Cuota</button>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        let cuotaIndex = 0;

        // Mostrar/ocultar sección de cuotas según tipo_pago
        $(document).ready(function () {
            $("#TipoPago").change(function () {
                if ($(this).val() === "Cuotas") {
                    $("#cuotasSection").show();
                } else {
                    $("#cuotasSection").hide();
                    $("#cuotasContainer").empty();
                    cuotaIndex = 0;
                }
            });
        });

        function agregarCuota() {
            const container = document.getElementById('cuotasContainer');
            const cuotaHtml = `
                <div class="cuota form-group">
                    <div class="row">
                        <div class="col-md-4">
                            <label>Fecha:</label>
                            <input type="datetime-local" name="Cuotas[${cuotaIndex}].FechaInicio" class="form-control" required />
                        </div>
                        <div class="col-md-4">
                            <label>Monto:</label>
                            <input type="number" step="0.01" name="Cuotas[${cuotaIndex}].Costo" class="form-control" required />
                        </div>
                        <div class="col-md-2">
                            <label>&nbsp;</label>
                            <button type="button" class="btn btn-danger" onclick="this.parentElement.parentElement.parentElement.remove()">Eliminar</button>
                        </div>
                    </div>
                </div>`;
            container.insertAdjacentHTML('beforeend', cuotaHtml);
            cuotaIndex++;
        }
    </script>
}